{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import {\n//   DECREMENT_COUNTER,\n//   INCREMENT_COUNTER,\n// } from \"../actions/aut\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from \"../actions/authActions\"; // let initialState = {};\n\nvar initialState = {\n  isFetching: false,\n  isAuthenticated: false,\n  user: null\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      console.log(action);\n      return Object.assign({}, state, {\n        isFetching: true,\n        isAuthenticated: false // user: action.creds.email,\n\n      });\n\n    case LOGIN_SUCCESS:\n      console.log(action);\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAuthenticated: true // user: action.creds.email,\n\n      });\n\n    case LOGIN_FAILURE:\n      console.log(action);\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAuthenticated: false // user: action.creds.email,\n\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/anjan/workspace/firebaseAuth/redux/reducers/authReducer.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","isFetching","isAuthenticated","user","authReducer","state","action","type","console","log","Object","assign"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,aAAvC,QAA4D,wBAA5D,C,CAEA;;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAAnB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAE,IADkB;AAE9BC,QAAAA,eAAe,EAAE,KAFa,CAG9B;;AAH8B,OAAzB,CAAP;;AAKF,SAAKJ,aAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,eAAe,EAAE,IAFa,CAG9B;;AAH8B,OAAzB,CAAP;;AAKF,SAAKH,aAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,eAAe,EAAE,KAFa,CAG9B;;AAH8B,OAAzB,CAAP;;AAKF;AACE,+BAAYG,KAAZ;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["// import {\n//   DECREMENT_COUNTER,\n//   INCREMENT_COUNTER,\n// } from \"../actions/aut\";\n\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from \"../actions/authActions\";\n\n// let initialState = {};\n\nlet initialState = {\n  isFetching: false,\n  isAuthenticated: false,\n  user: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      console.log(action);\n      return Object.assign({}, state, {\n        isFetching: true,\n        isAuthenticated: false,\n        // user: action.creds.email,\n      });\n    case LOGIN_SUCCESS:\n      console.log(action);\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAuthenticated: true,\n        // user: action.creds.email,\n      });\n    case LOGIN_FAILURE:\n      console.log(action);\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAuthenticated: false,\n        // user: action.creds.email,\n      });\n    default:\n      return { ...state };\n  }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}