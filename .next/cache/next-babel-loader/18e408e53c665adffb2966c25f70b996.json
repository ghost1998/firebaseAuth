{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport router from \"next/router\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\"; // import { auth } from \"firebase\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"./initFirebase\";\nimport { loginRequest, loginSuccess, loginFailure } from \"../../redux/actions/authActions\";\nimport { incrementCounter } from \"../../redux/actions/counterActions\";\n\nconst withAuth = Component => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: \"LOADING\"\n      };\n    }\n\n    componentDidMount() {\n      //   this.props.loginRequest();\n      //   this.props.incrementCounter();\n      initFirebase();\n      const auth = firebase.auth();\n      auth.onAuthStateChanged(authUser => {\n        console.log(\"hohohoho\");\n        console.log(authUser);\n\n        if (authUser) {\n          this.setState({\n            status: \"SIGNED_IN\"\n          });\n        } else {\n          router.push(\"/\");\n        }\n      });\n    }\n\n    renderContent() {\n      const {\n        status\n      } = this.state;\n\n      if (status == \"LOADING\") {\n        return __jsx(\"h1\", null, \"Loading ......\");\n      } else if (status == \"SIGNED_IN\") {\n        return __jsx(Component, this.props);\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, null, this.renderContent()); //   return <React.Fragment>{this.renderContent()}</React.Fragment>;\n    }\n\n  };\n}; // export default withAuth;\n\n\nconst mapStateToProps = state => ({\n  counter: state.counter.value\n});\n\nconst mapDispatchToProps = {\n  loginRequest: loginRequest,\n  loginSuccess: loginSuccess,\n  loginFailure: loginFailure,\n  incrementCounter: incrementCounter\n}; // export default connect(mapStateToProps, mapDispatchToProps)(withAuth);\n// export default connect()(withAuth);\n// export default compose(connect(mapStateToProps, mapDispatchToProps))(withAuth);\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}