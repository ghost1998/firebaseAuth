{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport rootReducer from './reducers/rootReducer';\nimport { useMemo } from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nvar store;\nvar initialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\n\nfunction initStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware()));\n}\n\nexport var initializeStore = function initializeStore(preloadedState) {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (false) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n} // import { createStore, applyMiddleware } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n// export default store;\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/Users/anjan/workspace/firebaseAuth/redux/store.js"],"names":["rootReducer","useMemo","createStore","applyMiddleware","composeWithDevTools","store","initialState","lastUpdate","light","count","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore"],"mappings":";;;;;;;;AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AAEA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,IAAIC,KAAJ;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAOA,SAASC,SAAT,GAAkD;AAAA,MAA/BC,cAA+B,uEAAdL,YAAc;AAChD,SAAOJ,WAAW,CAChBF,WADgB,EAEhBW,cAFgB,EAGhBP,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD;;AAED,OAAO,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACD,cAAD,EAAoB;AAAA;;AACjD,MAAIE,MAAM,cAAGR,KAAH,6CAAYK,SAAS,CAACC,cAAD,CAA/B,CADiD,CAGjD;AACA;;;AACA,MAAIA,cAAc,IAAIN,KAAtB,EAA6B;AAC3BQ,IAAAA,MAAM,GAAGH,SAAS,iCACbL,KAAK,CAACS,QAAN,EADa,GAEbH,cAFa,EAAlB,CAD2B,CAK3B;;AACAN,IAAAA,KAAK,GAAGU,SAAR;AACD,GAZgD,CAcjD;;;AACA,aAAmC,OAAOF,MAAP,CAfc,CAgBjD;;AACA,MAAI,CAACR,KAAL,EAAYA,KAAK,GAAGQ,MAAR;AAEZ,SAAOA,MAAP;AACD,CApBM;AAsBP,OAAO,SAASG,QAAT,CAAkBV,YAAlB,EAAgC;AAAA;;AACrC,MAAMD,KAAK,GAAGJ,OAAO,CAAC;AAAA,WAAMW,eAAe,CAACN,YAAD,CAArB;AAAA,GAAD,EAAsC,CAACA,YAAD,CAAtC,CAArB;AACA,SAAOD,KAAP;AACD,C,CAGD;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;;GAjBgBW,Q","sourcesContent":["import rootReducer from './reducers/rootReducer';\n\nimport { useMemo } from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nlet store;\n\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n};\n\n\nfunction initStore(preloadedState = initialState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware())\n  );\n}\n\nexport const initializeStore = (preloadedState) => {\n  let _store = store ?? initStore(preloadedState);\n\n  // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n  if (preloadedState && store) {\n    _store = initStore({\n      ...store.getState(),\n      ...preloadedState,\n    });\n    // Reset the current store\n    store = undefined;\n  }\n\n  // For SSG and SSR always create a new store\n  if (typeof window === \"undefined\") return _store;\n  // Create the store once in the client\n  if (!store) store = _store;\n\n  return _store;\n};\n\nexport function useStore(initialState) {\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n}\n\n\n// import { createStore, applyMiddleware } from \"redux\";\n\n// import thunk from \"redux-thunk\";\n\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\n// export default store;\n\n\n"]},"metadata":{},"sourceType":"module"}