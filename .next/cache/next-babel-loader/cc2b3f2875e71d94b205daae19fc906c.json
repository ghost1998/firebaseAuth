{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport router from \"next/router\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\"; // import { auth } from \"firebase\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"./initFirebase\";\nimport { loginRequest, loginSuccess, loginFailure } from \"../../redux/actions/authActions\";\nimport { incrementCounter } from \"../../redux/actions/counterActions\";\n\nvar withAuth = function withAuth(Component) {\n  return /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    var _super = _createSuper(_class);\n\n    function _class(props) {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _super.call(this, props);\n      _this.state = {\n        status: \"LOADING\"\n      };\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        //   this.props.loginRequest();\n        //   this.props.incrementCounter();\n        initFirebase();\n        var auth = firebase.auth();\n        auth.onAuthStateChanged(function (authUser) {\n          console.log(\"hohohoho\");\n          console.log(authUser);\n\n          if (authUser) {\n            _this2.setState({\n              status: \"SIGNED_IN\"\n            });\n          } else {\n            router.push(\"/\");\n          }\n        });\n      }\n    }, {\n      key: \"renderContent\",\n      value: function renderContent() {\n        var status = this.state.status;\n\n        if (status == \"LOADING\") {\n          return __jsx(\"h1\", null, \"Loading ......\");\n        } else if (status == \"SIGNED_IN\") {\n          return __jsx(Component, this.props);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return __jsx(React.Fragment, null, this.renderContent()); //   return <React.Fragment>{this.renderContent()}</React.Fragment>;\n      }\n    }]);\n\n    return _class;\n  }(React.Component);\n}; // export default withAuth;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counter: state.counter.value\n  };\n};\n\nvar mapDispatchToProps = {\n  loginRequest: loginRequest,\n  loginSuccess: loginSuccess,\n  loginFailure: loginFailure,\n  incrementCounter: incrementCounter\n}; // export default connect(mapStateToProps, mapDispatchToProps)(withAuth);\n// export default connect()(withAuth);\n// export default compose(connect(mapStateToProps, mapDispatchToProps))(withAuth);\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}