{"ast":null,"code":"var _jsxFileName = \"/Users/anjan/workspace/firebaseAuth/utils/auth/withAuth.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport router from \"next/router\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\"; // import { auth } from \"firebase\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"./initFirebase\";\nimport { loginRequest, loginSuccess, loginFailure } from \"../../redux/actions/authActions\";\nimport { incrementCounter } from \"../../redux/actions/counterActions\";\n\nconst withAuth = Component => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: \"LOADING\"\n      };\n    }\n\n    componentDidMount() {\n      //   this.props.loginRequest();\n      //   this.props.incrementCounter();\n      initFirebase();\n      const auth = firebase.auth();\n      auth.onAuthStateChanged(authUser => {\n        console.log(\"hohohoho\");\n        console.log(authUser);\n\n        if (authUser) {\n          this.setState({\n            status: \"SIGNED_IN\"\n          });\n        } else {\n          router.push(\"/\");\n        }\n      });\n    }\n\n    renderContent() {\n      const {\n        status\n      } = this.state;\n\n      if (status == \"LOADING\") {\n        return __jsx(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }\n        }, \"Loading ......\");\n      } else if (status == \"SIGNED_IN\") {\n        return __jsx(Component, _extends({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }\n        }));\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }, this.renderContent()); //   return <React.Fragment>{this.renderContent()}</React.Fragment>;\n    }\n\n  };\n}; // export default withAuth;\n\n\nconst mapStateToProps = state => ({\n  counter: state.counter.value\n});\n\nconst mapDispatchToProps = {\n  loginRequest: loginRequest,\n  loginSuccess: loginSuccess,\n  loginFailure: loginFailure,\n  incrementCounter: incrementCounter\n}; // export default connect(mapStateToProps, mapDispatchToProps)(withAuth);\n\nexport default connect()(withAuth); // export default compose(connect(mapStateToProps, mapDispatchToProps))(withAuth);\n// export default withAuth;","map":{"version":3,"sources":["/Users/anjan/workspace/firebaseAuth/utils/auth/withAuth.js"],"names":["React","router","connect","compose","firebase","initFirebase","loginRequest","loginSuccess","loginFailure","incrementCounter","withAuth","Component","constructor","props","state","status","componentDidMount","auth","onAuthStateChanged","authUser","console","log","setState","push","renderContent","render","mapStateToProps","counter","value","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,QAAyD,iCAAzD;AACA,SAASC,gBAAT,QAAiC,oCAAjC;;AAGA,MAAMC,QAAQ,GAAIC,SAAD,IAAe;AAC9B,SAAO,cAAcX,KAAK,CAACW,SAApB,CAA8B;AACnCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,MAAM,EAAE;AADG,OAAb;AAGD;;AACCC,IAAAA,iBAAiB,GAAG;AAClB;AACA;AACAX,MAAAA,YAAY;AAEZ,YAAMY,IAAI,GAAGb,QAAQ,CAACa,IAAT,EAAb;AAEAA,MAAAA,IAAI,CAACC,kBAAL,CAAyBC,QAAD,IAAc;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEVD,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAIA,QAAJ,EAAc;AACZ,eAAKG,QAAL,CAAc;AACZP,YAAAA,MAAM,EAAE;AADI,WAAd;AAGD,SAJD,MAIO;AACLd,UAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACD;AACF,OAXC;AAYH;;AACDC,IAAAA,aAAa,GAAG;AACd,YAAM;AAAET,QAAAA;AAAF,UAAa,KAAKD,KAAxB;;AACA,UAAIC,MAAM,IAAI,SAAd,EAAyB;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,OAFD,MAEO,IAAIA,MAAM,IAAI,WAAd,EAA2B;AAChC,eAAO,MAAC,SAAD,eAAe,KAAKF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;AACF;;AACDY,IAAAA,MAAM,GAAG;AACP,aAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKD,aAAL,EAAjB,CAAP,CADO,CAET;AACC;;AAtCkC,GAArC;AAwCD,CAzCD,C,CA0CA;;;AAEA,MAAME,eAAe,GAAIZ,KAAD,KAAY;AAClCa,EAAAA,OAAO,EAAEb,KAAK,CAACa,OAAN,CAAcC;AADW,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACzBvB,EAAAA,YAAY,EAAEA,YADW;AAEzBC,EAAAA,YAAY,EAAEA,YAFW;AAGzBC,EAAAA,YAAY,EAAEA,YAHW;AAIzBC,EAAAA,gBAAgB,EAAEA;AAJO,CAA3B,C,CAMA;;AACA,eAAeP,OAAO,GAAGQ,QAAH,CAAtB,C,CACA;AAEA","sourcesContent":["import React from \"react\";\nimport router from \"next/router\";\n\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\n// import { auth } from \"firebase\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"./initFirebase\";\nimport { loginRequest, loginSuccess, loginFailure } from \"../../redux/actions/authActions\";\nimport { incrementCounter } from \"../../redux/actions/counterActions\";\n\n\nconst withAuth = (Component) => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: \"LOADING\",\n      };\n    }\n      componentDidMount() {\n        //   this.props.loginRequest();\n        //   this.props.incrementCounter();\n        initFirebase();\n\n        const auth = firebase.auth();\n\n        auth.onAuthStateChanged((authUser) => {\n                  console.log(\"hohohoho\");\n\n        console.log(authUser);\n        if (authUser) {\n          this.setState({\n            status: \"SIGNED_IN\",\n          });\n        } else {\n          router.push(\"/\");\n        }\n      });\n    }\n    renderContent() {\n      const { status } = this.state;\n      if (status == \"LOADING\") {\n        return <h1>Loading ......</h1>;\n      } else if (status == \"SIGNED_IN\") {\n        return <Component {...this.props} />;\n      }\n    }\n    render() {\n      return <React.Fragment>{this.renderContent()}</React.Fragment>;\n    //   return <React.Fragment>{this.renderContent()}</React.Fragment>;\n    }\n  };\n};\n// export default withAuth;\n\nconst mapStateToProps = (state) => ({\n  counter: state.counter.value,\n});\n\nconst mapDispatchToProps = {\n  loginRequest: loginRequest,\n  loginSuccess: loginSuccess,\n  loginFailure: loginFailure,\n  incrementCounter: incrementCounter\n};\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuth);\nexport default connect()(withAuth);\n// export default compose(connect(mapStateToProps, mapDispatchToProps))(withAuth);\n\n// export default withAuth;\n\n"]},"metadata":{},"sourceType":"module"}